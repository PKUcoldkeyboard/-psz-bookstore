<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cuterwrite.rbspring.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.cuterwrite.rbspring.entity.Post">
    <id column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="post_title" jdbcType="VARCHAR" property="postTitle" />
    <result column="post_author" jdbcType="VARCHAR" property="postAuthor" />
    <result column="post_date" jdbcType="TIMESTAMP" property="postDate" />
    <result column="post_type" jdbcType="VARCHAR" property="postType" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="peri_id" jdbcType="VARCHAR" property="periId" />
    <result column="post_like_num" jdbcType="INTEGER" property="postLikeNum" />
    <result column="post_collect_num" jdbcType="INTEGER" property="postCollectNum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cuterwrite.rbspring.entity.Post">
    <result column="post_content" jdbcType="LONGVARCHAR" property="postContent" />
  </resultMap>
  <sql id="Base_Column_List">
    post_id, post_title, post_author, post_date, post_type, user_account, peri_id, post_like_num, 
    post_collect_num
  </sql>
  <sql id="Blob_Column_List">
    post_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    where post_id = #{postId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post
    where post_id = #{postId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cuterwrite.rbspring.entity.Post">
    insert into post (post_id, post_title, post_author, 
      post_date, post_type, user_account, 
      peri_id, post_like_num, post_collect_num, 
      post_content)
    values (#{postId,jdbcType=INTEGER}, #{postTitle,jdbcType=VARCHAR}, #{postAuthor,jdbcType=VARCHAR}, 
      #{postDate,jdbcType=TIMESTAMP}, #{postType,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}, 
      #{periId,jdbcType=VARCHAR}, #{postLikeNum,jdbcType=INTEGER}, #{postCollectNum,jdbcType=INTEGER}, 
      #{postContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cuterwrite.rbspring.entity.Post">
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        post_id,
      </if>
      <if test="postTitle != null">
        post_title,
      </if>
      <if test="postAuthor != null">
        post_author,
      </if>
      <if test="postDate != null">
        post_date,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="periId != null">
        peri_id,
      </if>
      <if test="postLikeNum != null">
        post_like_num,
      </if>
      <if test="postCollectNum != null">
        post_collect_num,
      </if>
      <if test="postContent != null">
        post_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="postTitle != null">
        #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postAuthor != null">
        #{postAuthor,jdbcType=VARCHAR},
      </if>
      <if test="postDate != null">
        #{postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="periId != null">
        #{periId,jdbcType=VARCHAR},
      </if>
      <if test="postLikeNum != null">
        #{postLikeNum,jdbcType=INTEGER},
      </if>
      <if test="postCollectNum != null">
        #{postCollectNum,jdbcType=INTEGER},
      </if>
      <if test="postContent != null">
        #{postContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cuterwrite.rbspring.entity.Post">
    update post
    <set>
      <if test="postTitle != null">
        post_title = #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postAuthor != null">
        post_author = #{postAuthor,jdbcType=VARCHAR},
      </if>
      <if test="postDate != null">
        post_date = #{postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="postType != null">
        post_type = #{postType,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="periId != null">
        peri_id = #{periId,jdbcType=VARCHAR},
      </if>
      <if test="postLikeNum != null">
        post_like_num = #{postLikeNum,jdbcType=INTEGER},
      </if>
      <if test="postCollectNum != null">
        post_collect_num = #{postCollectNum,jdbcType=INTEGER},
      </if>
      <if test="postContent != null">
        post_content = #{postContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cuterwrite.rbspring.entity.Post">
    update post
    set post_title = #{postTitle,jdbcType=VARCHAR},
      post_author = #{postAuthor,jdbcType=VARCHAR},
      post_date = #{postDate,jdbcType=TIMESTAMP},
      post_type = #{postType,jdbcType=VARCHAR},
      user_account = #{userAccount,jdbcType=VARCHAR},
      peri_id = #{periId,jdbcType=VARCHAR},
      post_like_num = #{postLikeNum,jdbcType=INTEGER},
      post_collect_num = #{postCollectNum,jdbcType=INTEGER},
      post_content = #{postContent,jdbcType=LONGVARCHAR}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cuterwrite.rbspring.entity.Post">
    update post
    set post_title = #{postTitle,jdbcType=VARCHAR},
      post_author = #{postAuthor,jdbcType=VARCHAR},
      post_date = #{postDate,jdbcType=TIMESTAMP},
      post_type = #{postType,jdbcType=VARCHAR},
      user_account = #{userAccount,jdbcType=VARCHAR},
      peri_id = #{periId,jdbcType=VARCHAR},
      post_like_num = #{postLikeNum,jdbcType=INTEGER},
      post_collect_num = #{postCollectNum,jdbcType=INTEGER}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
</mapper>